package ru.descend.bot.lolapi.dto.matchDto

data class Participant(
    val allInPings: Int,
    val assistMePings: Int,
    val assists: Int,
    val baronKills: Int,
    val basicPings: Int,
    val bountyLevel: Int,
    val challenges: Challenges?,
    val champExperience: Int,
    val champLevel: Int,
    val championId: Int,
    val championName: String,
    val championTransform: Int,
    val commandPings: Int,
    val consumablesPurchased: Int,
    val damageDealtToBuildings: Int,
    val damageDealtToObjectives: Int,
    val damageDealtToTurrets: Int,
    val damageSelfMitigated: Int,
    val dangerPings: Int,
    val deaths: Int,
    val detectorWardsPlaced: Int,
    val doubleKills: Int,
    val dragonKills: Int,
    val eligibleForProgression: Boolean,
    val enemyMissingPings: Int,
    val enemyVisionPings: Int,
    val firstBloodAssist: Boolean,
    val firstBloodKill: Boolean,
    val firstTowerAssist: Boolean,
    val firstTowerKill: Boolean,
    val gameEndedInEarlySurrender: Boolean,
    val gameEndedInSurrender: Boolean,
    val getBackPings: Int,
    val goldEarned: Int,
    val goldSpent: Int,
    val holdPings: Int,
    val individualPosition: String,
    val inhibitorKills: Int,
    val inhibitorTakedowns: Int,
    val inhibitorsLost: Int,
    val item0: Int,
    val item1: Int,
    val item2: Int,
    val item3: Int,
    val item4: Int,
    val item5: Int,
    val item6: Int,
    val itemsPurchased: Int,
    val killingSprees: Int,
    val kills: Int,
    val lane: String,
    val largestCriticalStrike: Int,
    val largestKillingSpree: Int,
    val largestMultiKill: Int,
    val longestTimeSpentLiving: Int,
    val magicDamageDealt: Int,
    val magicDamageDealtToChampions: Int,
    val magicDamageTaken: Int,
    val missions: Missions,
    val needVisionPings: Int,
    val neutralMinionsKilled: Int,
    val nexusKills: Int,
    val nexusLost: Int,
    val nexusTakedowns: Int,
    val objectivesStolen: Int,
    val objectivesStolenAssists: Int,
    val onMyWayPings: Int,
    val participantId: Int,
    val pentaKills: Int,
    val perks: Perks,
    val physicalDamageDealt: Int,
    val physicalDamageDealtToChampions: Int,
    val physicalDamageTaken: Int,
    val placement: Int,
    val playerAugment1: Int,
    val playerAugment2: Int,
    val playerAugment3: Int,
    val playerAugment4: Int,
    val playerAugment5: Int,
    val playerAugment6: Int,
    val playerSubteamId: Int,
    val profileIcon: Int,
    val pushPings: Int,
    val puuid: String,
    val quadraKills: Int,
    val riotIdGameName: String?,
    val riotIdTagline: String?,
    val role: String,
    val sightWardsBoughtInGame: Int,
    val spell1Casts: Int,
    val spell2Casts: Int,
    val spell3Casts: Int,
    val spell4Casts: Int,
    val subteamPlacement: Int,
    val summoner1Casts: Int,
    val summoner1Id: Int,
    val summoner2Casts: Int,
    val summoner2Id: Int,
    val summonerId: String,
    val summonerLevel: Int,
    val summonerName: String,
    val teamEarlySurrendered: Boolean,
    val teamId: Int,
    val teamPosition: String,
    val timeCCingOthers: Int,
    val timePlayed: Int,
    val totalAllyJungleMinionsKilled: Int,
    val totalDamageDealt: Int,
    val totalDamageDealtToChampions: Int,
    val totalDamageShieldedOnTeammates: Int,
    val totalDamageTaken: Int,
    val totalEnemyJungleMinionsKilled: Int,
    val totalHeal: Int,
    val totalHealsOnTeammates: Int,
    val totalMinionsKilled: Int,
    val totalTimeCCDealt: Int,
    val totalTimeSpentDead: Int,
    val totalUnitsHealed: Int,
    val tripleKills: Int,
    val trueDamageDealt: Int,
    val trueDamageDealtToChampions: Int,
    val trueDamageTaken: Int,
    val turretKills: Int,
    val turretTakedowns: Int,
    val turretsLost: Int,
    val unrealKills: Int,
    val visionClearedPings: Int,
    val visionScore: Int,
    val visionWardsBoughtInGame: Int,
    val wardsKilled: Int,
    val wardsPlaced: Int,
    val win: Boolean
) {
    override fun toString(): String {
        return "Participant(allInPings=$allInPings, assistMePings=$assistMePings, assists=$assists, baronKills=$baronKills, basicPings=$basicPings, bountyLevel=$bountyLevel, challenges=$challenges, champExperience=$champExperience, champLevel=$champLevel, championId=$championId, championName='$championName', championTransform=$championTransform, commandPings=$commandPings, consumablesPurchased=$consumablesPurchased, damageDealtToBuildings=$damageDealtToBuildings, damageDealtToObjectives=$damageDealtToObjectives, damageDealtToTurrets=$damageDealtToTurrets, damageSelfMitigated=$damageSelfMitigated, dangerPings=$dangerPings, deaths=$deaths, detectorWardsPlaced=$detectorWardsPlaced, doubleKills=$doubleKills, dragonKills=$dragonKills, eligibleForProgression=$eligibleForProgression, enemyMissingPings=$enemyMissingPings, enemyVisionPings=$enemyVisionPings, firstBloodAssist=$firstBloodAssist, firstBloodKill=$firstBloodKill, firstTowerAssist=$firstTowerAssist, firstTowerKill=$firstTowerKill, gameEndedInEarlySurrender=$gameEndedInEarlySurrender, gameEndedInSurrender=$gameEndedInSurrender, getBackPings=$getBackPings, goldEarned=$goldEarned, goldSpent=$goldSpent, holdPings=$holdPings, individualPosition='$individualPosition', inhibitorKills=$inhibitorKills, inhibitorTakedowns=$inhibitorTakedowns, inhibitorsLost=$inhibitorsLost, item0=$item0, item1=$item1, item2=$item2, item3=$item3, item4=$item4, item5=$item5, item6=$item6, itemsPurchased=$itemsPurchased, killingSprees=$killingSprees, kills=$kills, lane='$lane', largestCriticalStrike=$largestCriticalStrike, largestKillingSpree=$largestKillingSpree, largestMultiKill=$largestMultiKill, longestTimeSpentLiving=$longestTimeSpentLiving, magicDamageDealt=$magicDamageDealt, magicDamageDealtToChampions=$magicDamageDealtToChampions, magicDamageTaken=$magicDamageTaken, missions=$missions, needVisionPings=$needVisionPings, neutralMinionsKilled=$neutralMinionsKilled, nexusKills=$nexusKills, nexusLost=$nexusLost, nexusTakedowns=$nexusTakedowns, objectivesStolen=$objectivesStolen, objectivesStolenAssists=$objectivesStolenAssists, onMyWayPings=$onMyWayPings, participantId=$participantId, pentaKills=$pentaKills, perks=$perks, physicalDamageDealt=$physicalDamageDealt, physicalDamageDealtToChampions=$physicalDamageDealtToChampions, physicalDamageTaken=$physicalDamageTaken, placement=$placement, playerAugment1=$playerAugment1, playerAugment2=$playerAugment2, playerAugment3=$playerAugment3, playerAugment4=$playerAugment4, playerAugment5=$playerAugment5, playerAugment6=$playerAugment6, playerSubteamId=$playerSubteamId, profileIcon=$profileIcon, pushPings=$pushPings, puuid='$puuid', quadraKills=$quadraKills, riotIdGameName=$riotIdGameName, riotIdTagline=$riotIdTagline, role='$role', sightWardsBoughtInGame=$sightWardsBoughtInGame, spell1Casts=$spell1Casts, spell2Casts=$spell2Casts, spell3Casts=$spell3Casts, spell4Casts=$spell4Casts, subteamPlacement=$subteamPlacement, summoner1Casts=$summoner1Casts, summoner1Id=$summoner1Id, summoner2Casts=$summoner2Casts, summoner2Id=$summoner2Id, summonerId='$summonerId', summonerLevel=$summonerLevel, summonerName='$summonerName', teamEarlySurrendered=$teamEarlySurrendered, teamId=$teamId, teamPosition='$teamPosition', timeCCingOthers=$timeCCingOthers, timePlayed=$timePlayed, totalAllyJungleMinionsKilled=$totalAllyJungleMinionsKilled, totalDamageDealt=$totalDamageDealt, totalDamageDealtToChampions=$totalDamageDealtToChampions, totalDamageShieldedOnTeammates=$totalDamageShieldedOnTeammates, totalDamageTaken=$totalDamageTaken, totalEnemyJungleMinionsKilled=$totalEnemyJungleMinionsKilled, totalHeal=$totalHeal, totalHealsOnTeammates=$totalHealsOnTeammates, totalMinionsKilled=$totalMinionsKilled, totalTimeCCDealt=$totalTimeCCDealt, totalTimeSpentDead=$totalTimeSpentDead, totalUnitsHealed=$totalUnitsHealed, tripleKills=$tripleKills, trueDamageDealt=$trueDamageDealt, trueDamageDealtToChampions=$trueDamageDealtToChampions, trueDamageTaken=$trueDamageTaken, turretKills=$turretKills, turretTakedowns=$turretTakedowns, turretsLost=$turretsLost, unrealKills=$unrealKills, visionClearedPings=$visionClearedPings, visionScore=$visionScore, visionWardsBoughtInGame=$visionWardsBoughtInGame, wardsKilled=$wardsKilled, wardsPlaced=$wardsPlaced, win=$win)"
    }
}